// Responsive mixin

$desktop: 70rem;
$tablet: 48rem;
$mobile: 30rem;

@mixin MQ($mediaquery_unit: $mobile) {
    @media all and (min-width: $mediaquery_unit) {
        @content;
    }
}
  
// Flex mixin

@mixin flexible ($dis, $direction, $wrap, $just, $align) {
    display: $dis;
    flex-flow: $direction $wrap;
    justify-content: $just;
    align-items: $align;
}
  
// Grid mixin 

@mixin grid ($columns, $gap) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

// Margin mixins

@mixin padding($top, $side, $gap) {
    padding: $top $side;
    gap: $gap;
}

@mixin responsivepaddingX ($padding: 3.2rem) {
    padding-left: $padding;
    padding-right: $padding;

    @include MQ ($tablet) {
        padding-left: ($padding * 2.5);
        padding-right: ($padding * 2.5);
    }

    @include MQ ($desktop) {
        padding-left: ($padding * 5);
        padding-right: ($padding * 5);
    }    
}

@mixin responsivepaddingY ($padding: 8rem) {
    padding-top: $padding;
    padding-bottom: $padding;

    @include MQ ($tablet) {
        padding-top: $padding;
        padding-bottom: $padding;
    }

    @include MQ ($desktop) {
        padding-top: ($padding * 2);
        padding-bottom: ($padding * 2);
    }    
}

@mixin responsivemarginX ($margin: 3.2rem) {
    margin-left: $margin;
    margin-right: $margin;

    @include MQ ($tablet) {
        margin-left: ($margin * 2.5);
        margin-right: ($margin * 2.5);
    }

    @include MQ ($desktop) {
        margin-left: ($margin * 5);
        margin-right: ($margin * 5);
    }    
}

@mixin responsivemarginY ($margin: 8rem) {
    margin-top: $margin;
    margin-bottom: $margin;

    @include MQ ($tablet) {
        margin-top: $margin;
        margin-bottom: $margin;
    }

    @include MQ ($desktop) {
        padding-top: ($padding * 2);
        padding-bottom: ($padding * 2);
    }    
}

// Map layers
$map-layers: (
    "below":        -1,
    "default":      0,
    "above":        1,
    "over":         2,
    "absolute":     3
);

@function z($layer) {
    @return map-get($map-layers, $layer);
}

  